
## Chapter 15 `:global` 命令
### Tip 97 结识`:global`命令P.223
`:global`是一个 Ex 命令，它允许我们在某个指定模式的所有匹配行上运行**其它**
（即不能是`:g`本身）Ex命令。
因此，`:global`与`:s`有点相似，`:s`对匹配进行替换，而`:global`对匹配执行Ex命令，
而且，`:global`更强大。语法规则如下：

	:[range]g[lobal]/{pattern}/[cmd]
`:g`的特点：

1. 默认的作用范围是整个文件（`%`），`:s`的默认作用范围是当前行（`.`）；
2. 与`:s`相同，查找域和查找命令行相连，
   这意味着`:g`也能通过留空查找域的方式实现调用当前查找模式；
3. `:g[lobal]!` = `:v[global]`,表示反转（invert），
   表示Vim将在没有匹配到指定模式的行上执行`[cmd]`；
4. `[cmd]`留空则使用`:print`命令；

### Tip 98 删除所有包含模式的文本行`:g/re/d`, `:v/re/d`, `grep` P.224
将`:g`与`:delete`组合使用，可以快速裁剪文件内容，对那些匹配的文本行，
我们既可以选择保留，也可以将其丢弃。

善用佳软那个用Vim过滤出课程内容的操作就是用的这个功能。
这一节也道出了经常使用的`grep`命令名称的来历：`:g/re/p`表示将匹配的行打印出来，
吧`/`去掉正是'grep'.

### Tip 99 将TODO项收集至寄存器 `:g/TODO`, `qaq`, `:g/TODO/y A`P.226
如果像以列表的形式查看一下一个 Model Class 中的所有方法，只需`:g/function`,
这个很有用，想想上面`grep`的来历就会明白，这个命令就是`grep`的一种形式罢了。

### Tip 100 将CSS文件中的所有规则的属性按照字母顺序排列P.224
Ex 命令本身就有 Range, 例如如果我们想将下面一个CSS样式的属性按字母顺序排列：

	#loading #loading-one {
		color:#fff;
		position:absolute; 
		top:50%; left:50%;
		margin:20px 0 0 -50px;
		padding:3px 10px;
	}
假设光标在`{}`内部，我们用`vi{:sort`即可完成操作。

那么`:g`的语法格式可以是如下的形式：

	:g/{pattern}/[range] [cmd]
> 实际上，我们可以用`:g/{pattern}`匹配作为参考点，动态设置`[cmd]`的`[range]`.
> `.`通常表示光标所在行，但在`:g`的上下文中，它表示**`{pattern}`的匹配行`.

如果能理解`:g/{/.+1,/}/-1 sort`可以将一个CSS文件中所有规则都按字母顺序排列，
表示自己已完全理解本节内容，如不能，还得再读。

`:g`命令的广义形式：

	:g/{start}/ ., {finish} [cmd]
`:g`果然厉害。
